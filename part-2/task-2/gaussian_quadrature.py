import math

from polynomial_quadrature import func

zi_values = {
    2: {
        1: -0.5773502691896257,
        2: 0.5773502691896257
    },
    3: {
        1: 0.0000000000000000,
        2: -0.7745966692414834,
        3: 0.7745966692414834
    },
    4: {
        1: -0.3399810435848563,
        2: 0.3399810435848563,
        3: -0.8611363115940526,
        4: 0.8611363115940526
    },
    5: {
        1: 0.0000000000000000,
        2: -0.5384693101056831,
        3: 0.5384693101056831,
        4: -0.9061798459386640,
        5: 0.9061798459386640
    },
    6: {
        1: 0.6612093864662645,
        2: -0.6612093864662645,
        3: -0.2386191860831969,
        4: 0.2386191860831969,
        5: -0.9324695142031521,
        6: 0.9324695142031521
    },
    7: {
        1: 0.0000000000000000,
        2: 0.4058451513773972,
        3: -0.4058451513773972,
        4: -0.7415311855993945,
        5: 0.7415311855993945,
        6: -0.9491079123427585,
        7: 0.9491079123427585
    },
    8: {
        1: -0.1834346424956498,
        2: 0.1834346424956498,
        3: -0.5255324099163290,
        4: 0.5255324099163290,
        5: -0.7966664774136267,
        6: 0.7966664774136267,
        7: -0.9602898564975363,
        8: 0.9602898564975363
    },
    9: {
        1: 0.0000000000000000,
        2: -0.8360311073266358,
        3: 0.8360311073266358,
        4: -0.9681602395076261,
        5: 0.9681602395076261,
        6: -0.3242534234038089,
        7: 0.3242534234038089,
        8: -0.6133714327005904,
        9: 0.6133714327005904
    },
    10: {
        1: -0.1488743389816312,
        2: 0.1488743389816312,
        3: -0.4333953941292472,
        4: 0.4333953941292472,
        5: -0.6794095682990244,
        6: 0.6794095682990244,
        7: -0.8650633666889845,
        8: 0.8650633666889845,
        9: -0.9739065285171717,
        10: 0.9739065285171717
    },
}
wi_values = {
    2: {
        1: 1.0000000000000000,
        2: 1.0000000000000000
    },
    3: {
        1: 0.8888888888888888,
        2: 0.5555555555555556,
        3: 0.5555555555555556
    },
    4: {
        1: 0.6521451548625461,
        2: 0.6521451548625461,
        3: 0.3478548451374538,
        4: 0.3478548451374538
    },
    5: {
        1: 0.5688888888888889,
        2: 0.4786286704993665,
        3: 0.4786286704993665,
        4: 0.2369268850561891,
        5: 0.2369268850561891
    },
    6: {
        1: 0.3607615730481386,
        2: 0.3607615730481386,
        3: 0.4679139345726910,
        4: 0.4679139345726910,
        5: 0.1713244923791704,
        6: 0.1713244923791704
    },
    7: {
        1: 0.4179591836734694,
        2: 0.3818300505051189,
        3: 0.3818300505051189,
        4: 0.2797053914892766,
        5: 0.2797053914892766,
        6: 0.1294849661688697,
        7: 0.1294849661688697
    },
    8: {
        1: 0.3626837833783620,
        2: 0.3626837833783620,
        3: 0.3137066458778873,
        4: 0.3137066458778873,
        5: 0.2223810344533745,
        6: 0.2223810344533745,
        7: 0.1012285362903763,
        8: 0.1012285362903763
    },
    9: {
        1: 0.3302393550012598,
        2: 0.1806481606948574,
        3: 0.1806481606948574,
        4: 0.0812743883615744,
        5: 0.0812743883615744,
        6: 0.3123470770400029,
        7: 0.3123470770400029,
        8: 0.2606106964029354,
        9: 0.2606106964029354
    },
    10: {
        1: 0.2955242247147529,
        2: 0.2955242247147529,
        3: 0.2692667193099963,
        4: 0.2692667193099963,
        5: 0.2190863625159820,
        6: 0.2190863625159820,
        7: 0.1494513491505806,
        8: 0.1494513491505806,
        9: 0.0666713443086881,
        10: 0.0666713443086881
    },
}

def gaussian_quadrature(a, b, numP, c):
    L = b - a
    sum = 0
    for i in range(1, numP + 1):
        x = (a + b + zi_values[numP][i] * L) / 2
        f = func(c, x)
        w = wi_values[numP][i]

        sum += f*w

    return (sum * L) / 2

